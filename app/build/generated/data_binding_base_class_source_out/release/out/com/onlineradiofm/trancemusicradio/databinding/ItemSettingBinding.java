// Generated by data binding compiler. Do not edit!
package com.onlineradiofm.trancemusicradio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.balysv.materialripple.MaterialRippleLayout;
import com.onlineradiofm.trancemusicradio.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemSettingBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatTextView imgChevron;

  @NonNull
  public final AppCompatImageView imgView;

  @NonNull
  public final ConstraintLayout layoutImg;

  @NonNull
  public final MaterialRippleLayout layoutRippleSetting;

  @NonNull
  public final RelativeLayout layoutRoot;

  @NonNull
  public final View listDivider;

  @NonNull
  public final AppCompatTextView tvName;

  protected ItemSettingBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatTextView imgChevron, AppCompatImageView imgView, ConstraintLayout layoutImg,
      MaterialRippleLayout layoutRippleSetting, RelativeLayout layoutRoot, View listDivider,
      AppCompatTextView tvName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgChevron = imgChevron;
    this.imgView = imgView;
    this.layoutImg = layoutImg;
    this.layoutRippleSetting = layoutRippleSetting;
    this.layoutRoot = layoutRoot;
    this.listDivider = listDivider;
    this.tvName = tvName;
  }

  @NonNull
  public static ItemSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_setting, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemSettingBinding>inflateInternal(inflater, R.layout.item_setting, root, attachToRoot, component);
  }

  @NonNull
  public static ItemSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_setting, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemSettingBinding>inflateInternal(inflater, R.layout.item_setting, null, false, component);
  }

  public static ItemSettingBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemSettingBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemSettingBinding)bind(component, view, R.layout.item_setting);
  }
}
