// Generated by view binder compiler. Do not edit!
package com.onlineradiofm.trancemusicradio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.balysv.materialripple.MaterialRippleLayout;
import com.onlineradiofm.trancemusicradio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatTextView btnDeleteAccount;

  @NonNull
  public final AppCompatTextView btnSignOut;

  @NonNull
  public final AppCompatImageView imgAvatar;

  @NonNull
  public final AppCompatImageView imgMember;

  @NonNull
  public final MaterialRippleLayout layoutBtnDelete;

  @NonNull
  public final MaterialRippleLayout layoutBtnSignOut;

  @NonNull
  public final LinearLayout layoutInfoMember;

  @NonNull
  public final LinearLayout layoutItemSetting;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final AppCompatTextView tvInfoMember;

  @NonNull
  public final AppCompatTextView tvUserName;

  @NonNull
  public final AppCompatTextView tvVersion;

  private FragmentProfileBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatTextView btnDeleteAccount, @NonNull AppCompatTextView btnSignOut,
      @NonNull AppCompatImageView imgAvatar, @NonNull AppCompatImageView imgMember,
      @NonNull MaterialRippleLayout layoutBtnDelete, @NonNull MaterialRippleLayout layoutBtnSignOut,
      @NonNull LinearLayout layoutInfoMember, @NonNull LinearLayout layoutItemSetting,
      @NonNull NestedScrollView scrollView, @NonNull AppCompatTextView tvInfoMember,
      @NonNull AppCompatTextView tvUserName, @NonNull AppCompatTextView tvVersion) {
    this.rootView = rootView;
    this.btnDeleteAccount = btnDeleteAccount;
    this.btnSignOut = btnSignOut;
    this.imgAvatar = imgAvatar;
    this.imgMember = imgMember;
    this.layoutBtnDelete = layoutBtnDelete;
    this.layoutBtnSignOut = layoutBtnSignOut;
    this.layoutInfoMember = layoutInfoMember;
    this.layoutItemSetting = layoutItemSetting;
    this.scrollView = scrollView;
    this.tvInfoMember = tvInfoMember;
    this.tvUserName = tvUserName;
    this.tvVersion = tvVersion;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete_account;
      AppCompatTextView btnDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteAccount == null) {
        break missingId;
      }

      id = R.id.btn_sign_out;
      AppCompatTextView btnSignOut = ViewBindings.findChildViewById(rootView, id);
      if (btnSignOut == null) {
        break missingId;
      }

      id = R.id.img_avatar;
      AppCompatImageView imgAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imgAvatar == null) {
        break missingId;
      }

      id = R.id.img_member;
      AppCompatImageView imgMember = ViewBindings.findChildViewById(rootView, id);
      if (imgMember == null) {
        break missingId;
      }

      id = R.id.layoutBtnDelete;
      MaterialRippleLayout layoutBtnDelete = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnDelete == null) {
        break missingId;
      }

      id = R.id.layoutBtnSignOut;
      MaterialRippleLayout layoutBtnSignOut = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnSignOut == null) {
        break missingId;
      }

      id = R.id.layoutInfoMember;
      LinearLayout layoutInfoMember = ViewBindings.findChildViewById(rootView, id);
      if (layoutInfoMember == null) {
        break missingId;
      }

      id = R.id.layoutItemSetting;
      LinearLayout layoutItemSetting = ViewBindings.findChildViewById(rootView, id);
      if (layoutItemSetting == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tv_info_member;
      AppCompatTextView tvInfoMember = ViewBindings.findChildViewById(rootView, id);
      if (tvInfoMember == null) {
        break missingId;
      }

      id = R.id.tv_user_name;
      AppCompatTextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.tv_version;
      AppCompatTextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      return new FragmentProfileBinding((RelativeLayout) rootView, btnDeleteAccount, btnSignOut,
          imgAvatar, imgMember, layoutBtnDelete, layoutBtnSignOut, layoutInfoMember,
          layoutItemSetting, scrollView, tvInfoMember, tvUserName, tvVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
