// Generated by view binder compiler. Do not edit!
package com.onlineradiofm.trancemusicradio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.onlineradiofm.trancemusicradio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignInBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final AppCompatImageView imgLogo;

  @NonNull
  public final RelativeLayout layoutBg;

  @NonNull
  public final RelativeLayout layoutBottom;

  @NonNull
  public final NestedScrollView layoutContainer;

  @NonNull
  public final ItemToolbarBinding myToolbar;

  @NonNull
  public final RelativeLayout signInButton;

  @NonNull
  public final AppCompatTextView tvHeaderLogin;

  @NonNull
  public final AppCompatTextView tvInfoHeaderLogin;

  @NonNull
  public final AppCompatTextView tvPolicy;

  @NonNull
  public final AppCompatTextView tvTos;

  private ActivitySignInBinding(@NonNull RelativeLayout rootView, @NonNull View divider,
      @NonNull AppCompatImageView imgLogo, @NonNull RelativeLayout layoutBg,
      @NonNull RelativeLayout layoutBottom, @NonNull NestedScrollView layoutContainer,
      @NonNull ItemToolbarBinding myToolbar, @NonNull RelativeLayout signInButton,
      @NonNull AppCompatTextView tvHeaderLogin, @NonNull AppCompatTextView tvInfoHeaderLogin,
      @NonNull AppCompatTextView tvPolicy, @NonNull AppCompatTextView tvTos) {
    this.rootView = rootView;
    this.divider = divider;
    this.imgLogo = imgLogo;
    this.layoutBg = layoutBg;
    this.layoutBottom = layoutBottom;
    this.layoutContainer = layoutContainer;
    this.myToolbar = myToolbar;
    this.signInButton = signInButton;
    this.tvHeaderLogin = tvHeaderLogin;
    this.tvInfoHeaderLogin = tvInfoHeaderLogin;
    this.tvPolicy = tvPolicy;
    this.tvTos = tvTos;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.img_logo;
      AppCompatImageView imgLogo = ViewBindings.findChildViewById(rootView, id);
      if (imgLogo == null) {
        break missingId;
      }

      RelativeLayout layoutBg = (RelativeLayout) rootView;

      id = R.id.layout_bottom;
      RelativeLayout layoutBottom = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottom == null) {
        break missingId;
      }

      id = R.id.layout_container;
      NestedScrollView layoutContainer = ViewBindings.findChildViewById(rootView, id);
      if (layoutContainer == null) {
        break missingId;
      }

      id = R.id.my_toolbar;
      View myToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myToolbar == null) {
        break missingId;
      }
      ItemToolbarBinding binding_myToolbar = ItemToolbarBinding.bind(myToolbar);

      id = R.id.sign_in_button;
      RelativeLayout signInButton = ViewBindings.findChildViewById(rootView, id);
      if (signInButton == null) {
        break missingId;
      }

      id = R.id.tv_header_login;
      AppCompatTextView tvHeaderLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderLogin == null) {
        break missingId;
      }

      id = R.id.tv_info_header_login;
      AppCompatTextView tvInfoHeaderLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvInfoHeaderLogin == null) {
        break missingId;
      }

      id = R.id.tv_policy;
      AppCompatTextView tvPolicy = ViewBindings.findChildViewById(rootView, id);
      if (tvPolicy == null) {
        break missingId;
      }

      id = R.id.tv_tos;
      AppCompatTextView tvTos = ViewBindings.findChildViewById(rootView, id);
      if (tvTos == null) {
        break missingId;
      }

      return new ActivitySignInBinding((RelativeLayout) rootView, divider, imgLogo, layoutBg,
          layoutBottom, layoutContainer, binding_myToolbar, signInButton, tvHeaderLogin,
          tvInfoHeaderLogin, tvPolicy, tvTos);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
