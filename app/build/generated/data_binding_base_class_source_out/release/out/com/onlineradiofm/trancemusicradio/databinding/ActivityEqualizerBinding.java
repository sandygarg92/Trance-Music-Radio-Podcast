// Generated by view binder compiler. Do not edit!
package com.onlineradiofm.trancemusicradio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.onlineradiofm.trancemusicradio.R;
import com.triggertrap.seekarc.SeekArc;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEqualizerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final SwitchCompat equalizerSwitch;

  @NonNull
  public final LinearLayout layoutBands;

  @NonNull
  public final LinearLayout layoutBassVir;

  @NonNull
  public final RelativeLayout layoutBg;

  @NonNull
  public final RelativeLayout layoutHeader;

  @NonNull
  public final ItemToolbarBinding myToolbar;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final SeekArc seekBass;

  @NonNull
  public final SeekArc seekVir;

  @NonNull
  public final AppCompatSpinner spinnerPreset;

  @NonNull
  public final TextView tvBass;

  @NonNull
  public final TextView tvInfoBass;

  @NonNull
  public final TextView tvInfoVirtualizer;

  @NonNull
  public final TextView tvVirtualizer;

  private ActivityEqualizerBinding(@NonNull RelativeLayout rootView,
      @NonNull SwitchCompat equalizerSwitch, @NonNull LinearLayout layoutBands,
      @NonNull LinearLayout layoutBassVir, @NonNull RelativeLayout layoutBg,
      @NonNull RelativeLayout layoutHeader, @NonNull ItemToolbarBinding myToolbar,
      @NonNull ScrollView scrollView, @NonNull SeekArc seekBass, @NonNull SeekArc seekVir,
      @NonNull AppCompatSpinner spinnerPreset, @NonNull TextView tvBass,
      @NonNull TextView tvInfoBass, @NonNull TextView tvInfoVirtualizer,
      @NonNull TextView tvVirtualizer) {
    this.rootView = rootView;
    this.equalizerSwitch = equalizerSwitch;
    this.layoutBands = layoutBands;
    this.layoutBassVir = layoutBassVir;
    this.layoutBg = layoutBg;
    this.layoutHeader = layoutHeader;
    this.myToolbar = myToolbar;
    this.scrollView = scrollView;
    this.seekBass = seekBass;
    this.seekVir = seekVir;
    this.spinnerPreset = spinnerPreset;
    this.tvBass = tvBass;
    this.tvInfoBass = tvInfoBass;
    this.tvInfoVirtualizer = tvInfoVirtualizer;
    this.tvVirtualizer = tvVirtualizer;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEqualizerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEqualizerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_equalizer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEqualizerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.equalizer_switch;
      SwitchCompat equalizerSwitch = ViewBindings.findChildViewById(rootView, id);
      if (equalizerSwitch == null) {
        break missingId;
      }

      id = R.id.layout_bands;
      LinearLayout layoutBands = ViewBindings.findChildViewById(rootView, id);
      if (layoutBands == null) {
        break missingId;
      }

      id = R.id.layoutBassVir;
      LinearLayout layoutBassVir = ViewBindings.findChildViewById(rootView, id);
      if (layoutBassVir == null) {
        break missingId;
      }

      RelativeLayout layoutBg = (RelativeLayout) rootView;

      id = R.id.layout_header;
      RelativeLayout layoutHeader = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.my_toolbar;
      View myToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myToolbar == null) {
        break missingId;
      }
      ItemToolbarBinding binding_myToolbar = ItemToolbarBinding.bind(myToolbar);

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.seekBass;
      SeekArc seekBass = ViewBindings.findChildViewById(rootView, id);
      if (seekBass == null) {
        break missingId;
      }

      id = R.id.seekVir;
      SeekArc seekVir = ViewBindings.findChildViewById(rootView, id);
      if (seekVir == null) {
        break missingId;
      }

      id = R.id.spinner_preset;
      AppCompatSpinner spinnerPreset = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPreset == null) {
        break missingId;
      }

      id = R.id.tv_bass;
      TextView tvBass = ViewBindings.findChildViewById(rootView, id);
      if (tvBass == null) {
        break missingId;
      }

      id = R.id.tv_info_bass;
      TextView tvInfoBass = ViewBindings.findChildViewById(rootView, id);
      if (tvInfoBass == null) {
        break missingId;
      }

      id = R.id.tv_info_virtualizer;
      TextView tvInfoVirtualizer = ViewBindings.findChildViewById(rootView, id);
      if (tvInfoVirtualizer == null) {
        break missingId;
      }

      id = R.id.tv_virtualizer;
      TextView tvVirtualizer = ViewBindings.findChildViewById(rootView, id);
      if (tvVirtualizer == null) {
        break missingId;
      }

      return new ActivityEqualizerBinding((RelativeLayout) rootView, equalizerSwitch, layoutBands,
          layoutBassVir, layoutBg, layoutHeader, binding_myToolbar, scrollView, seekBass, seekVir,
          spinnerPreset, tvBass, tvInfoBass, tvInfoVirtualizer, tvVirtualizer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
